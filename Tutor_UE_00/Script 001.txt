ИНТРО 
-----
1.
  Итак, вы только что скачали Unreal Engine и хотите сделать Fortnite.

2.
  Что ж, у меня для вас две новости. Во первых - не получится. Вообще. Это не вопрос опыта и знаний, никто не делает Fortnit-ы в одиночку. Но вот на это, это или вот это, вас вполне может хватить.

3.
  И вторая новость - на то, что бы научится делать это, это или вот это, вам понадобиться... некоторое время. Очень. Много. Времени.

4.
  Я достаточно вас демотивировал? Хорошо. Тогда, не будем затягивать вступление, дольше, чем, оно, того заслуживает.




СКАЧАТЬ
-------

5.
  Для тех, кто ещё не скачал себе Unreal Engine коротко напомню как это делать.

6.
  Открываете "Epic Games Launcher", (тот самый, в котором вы каждую неделю, за свои кровнозаработанные, покупаете себе бесплатные игры, и который вы люто ненавидите, потому, что так надо). Переходите во вкладку "Unreal Engine", потом во вкладку "Библиотека", нажимаете на плюсик, выбираете версию, если хотите (по умолчанию ставится самая новая из более-менее стабильных, т.е. не превью и не бета).

7.
  Далее, кликаете установить и соглашаетест с лицензией. Тут вы видете два пути. 
  Не дайте себя запутать - это один путь. Второй, это просто первый с добавлением папки "UE_номер_версии", т.е. конечный путь к файлам движка, и поменять вы его тут не можете. Поменять можно только первый.

8.
  Важно - никогда не устанавливайте ничего связанного с Unreal Engine, в папку, в пути к которой есть кириллица. Ничего - ни сам движок, ни проекты. По началу, оно может сделать вид что оно работает, но в какой-то момент вы обязательно столкнётесь с проблемами. Чаще всего - это ошибки из вопросительных знаков на этапе компиляции билда.

9.
  Галочка "Создать Ярлык" - создаст ярлык запуска редактора на рабочем столе, а ткнув на кнопку "настройки", можно убрать ненужные компоненты, что бы не занимали место.

10.
  Если вы не планируете писать скрипты на с++, или можифицировать движок, то вам не нужны ни "Исходники движка", ни "Символы редактора для отладки". Так же стоит убрать все платформы, для которых вы не собираетесь делать сборки.

11.
  Иногда, можно увидеть ошибку: "Путь к файлу не должен быть длиннее 250 символов", не смотря на то, что путь тут явно короче 250 символов. На самом деле, оно имеет в виду путь, к какому-то ему одному известному файлу, который находится в дебрях его файловой структуры, и путь к которому, после установки, действительно будет длиннее 250 символов, так что у вас на весь путь есть на самом деле символов 25-30, не больше.

12.
  В принципе, после установки движка, можно будет переместить его куда угодно. На работоспособность это не повлияет, но вот лаунчер его больше не найдёт, соответственно добавление в ваш проект ассетов из маркетплейса будет несколько затруднительно - просто надо это будет делать в ручную.




ЛАУНЧЕР
-------

13.
  После запуска Unreal Engine нас встречает его лаунчер, с несколькими категориями стартовых шаблонов (темплейтов) для создания нового проекта, и одной кадегорией, где можно загрузить уже имеюшийся проект с диска.

14.
  Категория для загрузки существующих проектов - это "Recent Projects". Тут вы сразу видите список созданных проектов с превьюшками, который по умолчанию рассортирован по последней дате использования, но можно рассортировать и по алфавиту.
  Если проекта, который вы хотите открыть, в списке нет, можно открыть его в ручную с помощью кнопки "Browse".

15.
  Для создания нового проекта, используются темплейты.
  Создавая проект из темплейта, unreal просто добавляет в проект какой-то контент, из этого темплейта, включает плагины и применяет настройки. И всё это обратимо уже после создания проекта. То есть, всегда можно удалить ненужный контент, добавить нужный, включить другие плагины и поменять настройки - ничего другого эти темплейты не делают.

16.
  Все категории темплейтов кроме одной, с играми имеют довольно мало общего, но для тех, кому вдруг интересна область применения движка в целом я очень коротко по ним пробегусь. Те, кому не интересно - мотайте сюда %TODO: Timecode%.

17.
  Категория "Film / Video and Live Events" содержит темплейты для теле- и кино-производства. 
  Тут лежат темплейты для VR Scouting-а (собирания сцены в VR), виртуальной камеры (камеры в анриле управляемой каким-то внешним контроллером, телефоном, например), видео композингом (например, размещением живого видео на хромокее в виртуальном 3д пространстве), выводом видео через SDI (какой-то тедевизионный стандарт, о котором вам лучше расскажет википедия), DMX (управление светом, для концертов и light show) и nDisplay (вывод видео на нескольких дисплеях и синхронизацией камеры).

18.
  "Architecture" - категория с темплейтами для архитектурной визуализации.
  Включает такие интересные вещи как темплейт для работы в комманде, темплейт для AR, стилизованный рендер, конфигуратор дизайна (теплейт позволяющий разглядывать объект в разных конфигурациях, например здание с различными вариантами планировки, или на разных стадиях постройки).

19.
  В категории "Automotive" спрятались виртуальная студия для презентации автомобилей (хотя, можно использовать для чего угодно, в принципе), конфигуратор продукта (по большому счёту то же, что и конфигуратор дизайна из арчвиза, позволяет разглядывать объекты в разной конфигурации), и, такие же как и в арч-визе, темплейты для работы с AR и для работы в команде.

20.
  И категория "Simulation".
  Те кто уже работал в 3Д наверное подумали что речь идёт о симуляции физики, огня, воды или чего-то в этом роде.
  Но нет, эта категория про симуляцию трафика на дорожных развязках, перед их строительством, или про симуляторы для тренировки хирургов или спецназовцев.

21.
  И, наконец, категория "Games".
- "Blank" - просто пустой проект. Без контента.
- "First Person"     - темплейт из игрока (камеры с руками), умеющего подбирать предметы и стрелять тенисными мячиками.
- "Third Person"     - темплейт с игроком и камерой от третьего лица. 
- "Top Down"         - темплейт с игроком и камерой висящей сверху, в котором игрок управляется кликом мышкой по цели.
- "Vehicle"	     - темплейт с машинкой.
- "Handheld AR"      - темплейт для AR. Если кто не знает - AR (Augmented Reality), это технология для размещения 
			отрендеренных объектов поверх живого видео. Помните ещё "Pokemon GO"? Темплейт включает скрипты для
			трекинга плоских поверхностей для позиционирования виртуальных объектов и оценки освещения для более
			естественного их освещения.
- "Virtual Reality"  - темплейт для VR. Включает скрипты для телепортации и передвижения в VR, скрипты хватания и 
		        взаимодействия с объектами и пространственный звук.

22.
  После того, как вы определились с темплейтом, в правой панели можно указать дополнительные настройки.
  У некоторых темплейтов некоторые из этих настроек скрыты, а в некоторых - например у "First Person" - доступны они все.

23.
  Первая настройка: создавать blueprint проект, или c++ проект.
  Blueprints - это визуальный язык программирования, для не программистов, или программистов, которые не хотят сильно заморачиваться. Блупринты работают медленнее чем код на с++, и хоть сколько ни будь сложная логика на них имеет тенденцию превращаться в макароны, но они значительно проще для изучения, и с ними, в целом, можно жить. 

24.
  На самом деле, в любом блупринт проекте можно использовать с++, а в любом с++ проекте можно использовать блупринты.
  В принципе, любой большой проект, обычно содержит в себе и то и это, тогда в чём смысл этой настройки?

25.
  На самом деле, с++ и блупринт - это два независимых темплейта, это хорошо видно если зайти в папку где они лежат.
  Основная разница в том, что в блупринтовых темплейтах, все их скрипты лежат в виде блупринтов, а в с++ темплейтах, соответственно, все скрипты написаны на с++. 
  То есть что бы мождифицировать какой-то скрипт в темплейте, в первом случае вам нужно будет отредактировать блупринт, а во втором - код на с++.
  Но тут вижно что даже у пустого (blank) темплейта есть две версии. Там нет скриптов, тогда зачем?
  Ну, в его с++ версии есть папка "source", которая содержит файлы для компиляции проекта в Visual Studio. Вот и вся разница.

26.
  Следующая настройка - Target Platform: Desktop или Mobile. Отвечает за движок рендеринга - основной (для пк и консолей) или мобильный (для телефонов и планшетов).
  Во втором есть некоторое количество ограничений - нет глобального освещения в реальном времени, не работают нанит и люмен (хотя, сейчас появились девайсы на андроиде с аппаратным рейтрейсингом, и эпики говорят что люмен в каком-то виде в мобильном рендере всё та ки появиттся), нет волуметрик облаков и тумана, нет motion blur, нет контактных теней, нет Rect Light, нет полноценных SSR, нет TSR, нет модели затенения для волос и тканей... в общем много чего нет.

27.
  Quality preset: Maximum Quality или Scalability.
  При выборе scalability unreal применяет некоторые оптимизации к дефолтным настройкам проекта: отключает рейтрейсинг, виртуальные текстуры, автоэкспозицию, размытие в движении, антиалайсинг, и там ещё по мелочи.
  Все изменения заключаются в файле DefaultEngine.ini, для дотошных сравнение этих файлов у вас на экране.

28.
  Галочка "Starter Content" добавит в ваш новый проект содержимое вот этой папки. Список того что в неё входит - у вас на экране.

29.
  И, наконец, галочка "Raytracing", как не сложно догадаться, включит в проекте рейтрейсинг. И ещё Skin Cache, без которого рейтрейсинг не работает. Рейтрейсинг можно использовать для теней, отражений, глобального освещения, ambient occlusion, преломлений, и подповерхностное рассеивание.

30.
  В последних версиях движка, отдельный метод рейтрейсинга для отражений и глобального освещения считается устаревшим. В место него, предлагается использовать люмен, который сам будет разбираться, где использовать аппаратный рейтрейсинг, в зависимости от его наличия, параметров проекта и выбранного качества рендера.

31.
  Ещё раз напомню - все темплейты, и все эти настройки, это просто стартовые настройки нового проекта и контент, который будет в него добавлен при создании. Всё это можно поменять в любой момент. И добавить контент из другого темплейта тоже можно.

32.
  Определившись с темплейтом, указываем путь, где нужно создать проект, и его название.
  Название не должно содержать ничего кроме букв, цифр и знака подчёркивания. А путь не должен сожержать кириллицу и вообще любые не ASCII символы. То есть, Unrel вам позволит это сделать, но проблемы в этом случае гарантированны, как минимум на этапе компиляции.

33.
  Давайте сейчас выберем темплейт FPS, и кликаем на "Create", что бы создать на его основе проект.




ИНТЕРФЕЙС
---------

34.
  После создания проекта, открывается основной интерфейс Unreal Engine. У вас он будет выглядеть скорее так, а вернее, даже вот так.
  Раскладка окон в 4-ой и 5-ой версии движка немного отличается, но ничего существенного - сами окна те же. А в крупном разрешениие я снимаю что бы смотрящие на телефонах и упоротых нет-буках могли хоть что-то разглядеть - всё для вас.

35.
  Итак, это основной интерфейс Unreal-а.
  В раскладке по умолчанию, В Unreal Engine 5 тут есть меню, основная панель инструментов, нижняя панель инструментов и 3 окна: Viewport, Outliner и Details. 
  В UE4 было ещё окно Place Actors, которое в 5-ой версии переехало вот в эту кнопку, и Content Browser, который теперь открвается вот этой кнопкой, и скрывается как только вы кликните куда-то вне него. Закрепить его так, что бы он не убирался можно вот этой кнопкой.

36.
  В этой части интерфейса вы работаете с уровнями вашей игры, то есть занимаетесь левел-дизайном, освещением, тестированием, кат-сценами - всё это происходит тут. 
  Для всего остального - материалов, скриптов, пользовательских интерфейсов, частиц и кучи всего другого - в Unreal Engine есть отдельные редакторы.

37.
  Кстати, если вы случайно сломали интерфейс, закрыли, например, вьюпорт, то бысто вернуть всё назад можно из меню Window -> Load Layout -> Default Editor Layout - это сбросит всю раскладку интерфейса.

38.
  Ну, или, если, вы не хотите сбрасывать прям всё, а просто вернуть случайно закрытые окна, то это тоже делается из меню Window: вьюпорт тут, аутлайнер - тут, details - тут, и Content Browser вот тут, хотя из-за Content Browser-а сюда лезть не обязательно, его всегда можно вернуть кнопкой на нижней панели.

39.
  Всех этих окон тут можно открыть по 4 штуки, это иногда бывает удобно, но вам, сейчас, вероятнее всего, нужно будет только одно - первое (хотя, если очень хочется, можете использовать второе, они, типа, одинаковые).




ИНТЕРФЕЙС -> Content Browser
----------------------------

40.
  Content Browser - это файловый менеджер, который отображает все файлы вашего проекта - 3д модели, текстуры, материалы, скрипты, карты уровней, анимации, синематики, музыку, звуковые эффекты, системы частиц... их вот столько на самом деле.

41.
  В терминологии Unreal, да и игровых движков вообще, все эти файлы, из которых состоит проект называют ассетами. На русскоязычных форумах я пару раз встречал что их переводили как "Активы", но, не знаю... это просто дословный перевод, режет уши, честно говоря... Мне кажется лучше уж тогда переводить как "Ресурсы".

42.
  Некоторые ассеты - звуки, видео, текстуры и шрифты - импортируются в проект из вне, остальные - материалы, частицы, скрипты - создаются прямо внутри unreal engine.

43.
  В unreal-е так же есть встроенные базовые инструменты для создания 3д моделей и скелетных анимаций, но они ограничены, и такие ассеты всё таки удобнее делать во внешних 3д пакетах. Хотя, что то подправить по мелочи тут вполне можно.

44.
  У каждого типа ассета, здесь есть цветовой код, что бы быстрее их различать: 3д модели - голыбуе, модели с ригом - розовык, материалы - салатовые, скрипты (блупринты) - синие, текстуры - красные, звуки - сиреневые, и так далее...

45.
  Если вы создали проект из темплейта FPS, то в папке Content\FirstPerson\Maps у вас должен лежать уровень "FirstPersonMap". Откройте его, дважды кликнув на нём.
  (когда левел загрузится, у вас в рандомном месте может открыться окно World Partition, я не буду в этот раз про него говорить, и так получается очень длинно, просто закройте его пока, хорошо?).

46.
  Тут у нас пример небольшого уровня из кубов. Если мы его запустим, вот этой кнопкой, то можно взять пушку и походить, по прыгать и по стрелять шариками. Всё работает как и написано в описании к темплейту, тут не наврали.

47.
  Что бы выйти из режима тестирования игры - нажмите escape.




ИНТЕРФЕЙС -> Viewport -> Navigation
-----------------------------------

48.
  Переходим во вьюпорт. Передвигаться в нём можно зажав правцю кнопку мыши и нажимая WSAD на клавиатуре. WSAD, в этом режиме, дублируются на стрелках и на numpad-е.

49.
  Так же, в этом режиме (т.е. с зажат. прав. мыш.), можно использовать кнопки Q и E, для перемещения, соответственно, вниз и вверх (эти кнопки дублируются на PageUp/PageDown и на num7/num9). 

50.
  Скорость перемещения камеры можно поменять вот тут.

51.
  Зажав alt и лувую кноку мыши, можно вращать камеру вокруг объекта, на который она смотрит.
  Зажав среднюю кнопку мыши, можно мышкой двигать камеру влево/вправо/вверх/вниз. То же самое можно делать зажав вместо средней, левую и правую кнопки. 

52.
  Если вы пришли из майи/синьки/юнити... практически из любого 3д софта, и вы привыкли к инвертированному панорамированию (т.е. когда мышь влево двигает камеру вправо, и наоборот), то это можно исправить вот тут: Edit -> Editor Preferences -> Viewport -> Invert Middle Mouse Pan.

53.
  Зажав alt и правую кнопку, можно двигать камеру в направлении, в катором она смотрит. То же самое, можно делать и колёсиком мышки.

54.
  Ещё, есть довольно странный режим навигации, когда при зажатой левой кнопке, двигая мышку влево/вправо можно крутить камеру, а двигая вверх/вниз передвигаться вперёд/назад. Может кому-то и будет удобно.



ИНТЕРФЕЙС -> Viewport -> Move/Rotate/Scala
------------------------------------------

55.
  Кликая мышкой по объектам, мы выделяем их, и нажав кнопку F, можно подлететь камерой к выделенному объекту.

56.
  Выделенные объекты можно перемещать, вращать и масштабировать.
  Вот эти три кнопки меняют эти три режима, а левая - это режим просто выделения, нужен что бы случайно не переместить или не повернуть что-то, кликая по объектам.
  Эти четыре режима можно менять и кнопками на клавиатуре: Q, W, E, R.

57.
  Ещё, выделенные объекты можно удалять клавишей delete на клавиатуре.

58.
  Можно выделить сразу несколько объектов, кликая по ним с зажатым ctrl или shift.
  Есть небольшая разница, между этими кнопками - кликая по объектам с зажатым shift, мы можем только выделять новые объекты, а с зажатым ctrl - мы кликом инвертируем выделение, т.е. кликнув на не выделенный объект, мы выделяем его, а кликнув на выделенный - снимаем выделение.

59.
  В режиме перемещения, мы можем двигать объекты хватая их за стрелочки.

60.
  Что бы двигать объект в плоскости, по двум направлениям сразу, нужно исхитриться и схватиться за один из этих квадратиков у основания манипулятора. Каждый кводратик - своя плоскость.

61.
  Можно ещё схватиться за шарик, в основании, и перемещать объект в плоскости камеры, т.е. если камера смотрит ровно сверху вниз, вы будете таскать объект по полу, а если в бок - то по стене. Это опасный режим, так можно случайно что-то поднять над полом, или типа того. Он становится чуть более полезным если включить перемещение по поверхности, но это уже за рамками первого знакомства.

62.
  Если объект как-то хитро повёрнут в пространстве, то стрелки, для его перемещения, будут соответствовать, и переместить такой объект, например, ровно вверх - будет затруднительно. 

63.
  Для этого, у режимов перемещения и вращения, есть возможность переключать систему координат с локальной (объектной), на глобальную (мировую). С клавиатуры это можно переключить нажав ctrl + ~.

64.
  В локальной системе координат, направления передвижения, соответствует повороту объекта, а в мировой... ну, в мировой эти направления не меняются никогда: верх - это всегда верх, перёд - это... ну, туда, и т.д.

65.
  Если перед перемещением зажать кнопку alt - то мы сдублируем объект, и начнём перемещать его копию. Что бы сдублировать объект ещё раз, кнопку alt нужно отпустить и снова нажать - делать копии одна за другой, не получится, а жаль.

66.
  А если перед перемещением объекта зажать шифт, то камера будет перемещаться вместе с объектом, и мы получим довольно интересный эффект, насколько правда, полезный, я судить не берусь.

67.
  В режиме вразщения, мы тянем за вот эти дуги что бы повернуть объект в нужной плоскости. Тут никаких дополнительных возможностей нет, но в момент вращения появляется вот такая фиговина, показывающая как и на сколько мы объект повернули.

68.
  Так же можно переключать систему координат с локальной на мировую, тогда оно вращается как то так.

69.
  В режиме масштабирования - можно менять размер объекта.

70.
  Тут, чаще всего, мы тянем за кубик в центре - тогда мы меняем размер объекта пропорционально.
  Но если надо вытянуть его в какую-то одну сторону, то можно тянуть за каждую ось отдельно, как и при перемещении.
  Или в плоскости, что бы увеличить или уменьшить объект равномерно по двум осям.

71.
  В режиме масштабирования система координат всегда локальная.
  Обычно, 3д пакеты позволяют масштабировать объекты в мировой системе координат, но это даже выглядит странно и, в общем, никогда, по моему не нужно.

72.
  Если вы случайно переместили что-то не ту да, или удалили что-то не то, то вам поможен отменна последнего действя, доступная из этого менюю, либо просто ctrl + z на клавиатуре. Отменить можно довольно приличное количество последних действий. Не безконечное (откатится вечером к началу рабочего дня вы не сможете), но большое.

73.
  Вот эти три группы кнопок - это снапинг. Ну, то есть шаг, с которым мы перемещаем, вращаем и масштабируем объекты.
  В каждой из этих гркпп, левая кнопка включает и выключает снапинг, а правая (цифра) - это значение снапинга (её нельзя ввести в ручную, только выбрать из списка).

74.
  Вот как это работает: допустим, если у нас включён снапинг на перемещение, и в его значении стоит 10 сантиметров  (да, единицы измерения в unreal-е по умолчанию это сантиметры), то когда мы двигаем объект, как бы плавно мы не двигали мышку, он будет перемещаться с шагом в 10 сантиметров.

75.
  В режиме вращения, снапинг зажаётся в градусах, но смысл тот же - мы вращаем объект с шагом в 10 градусов.

76.
  В режиме масштабирования, снапинг немного менее интуитивен, и работает в коэфициенте от изначального размера объекта. 
  Ну, то есть, если мы поставим 1, то мы можем увеличить объект ровно в два, три, четыре, пять раз, и так далее, минуя промежуточные значения.




ИНТЕРФЕЙС -> Outliner
---------------------

77.
  Вот это окно - это Outliner
  Outliner - это просто список объектов в вашем уровне.

78.
  Когда вы кликаете во вьюпорте на объект, что бы его выделить, он выделяется и в аутлайнере. 
  Наоборот это тоже работает - можно выделить объект в списке что бы он выделился во вьюпорте.
  После этого, можно, например, подлететь к объекту камерой, с помощью кнопки F, или просто дважды кликнуть на нём в аутлайнере - это одно и то же. Так, удобно перемещаться в разные концы уровня, если он у вас большой. (Ещё удобнее, правда, использовать букмарки камеры, но о них мы поговорим не сегодня, всё равно о них все всегда забывают.)

79.
  Несколько объектов в списке можно выделить кликая по ним с зажатой клавишей ctrl по одному. Либо, с зажатой клавишей shift, можно выделить все объекты в списке от текущего, и до того, на котором кликнули с шифтом.

80.
  Объекты можно переименовывать, с помощью клика левой кнопкой (если объект был выделен больше пол-секунды назад, иначе клик просто зачтётся за двойной), либо с помощью кнопки F2. Не забывайте это делать, что бы не путаться в объектах, когда их становиться много. Кроме того, если вы примерно знаете как ваши объекты называются, их можно искать с помощью поиска.

81.
 Если вы уже работали в другом 3д софте и привыкли к иерархии объектов, то... её тут нет.

82.
 Можно помещать объекты в папки, и под-папки, для организации, но это всё. Перемещать млм вращать такую папку, что бы переместить/покрутить одновременно все объекты в ней, тут нельзя. Потому что папка это не объект в сцене, это просто папка.

83.
  Полноценная иерархия в анриле есть в акторах, но о них не в этот раз.

84.
  Что бы создать папку, нужно кликнуть правой кнопкой на пустом месте, в аутлайнера, и выбрать "Create Folder".
  Если пустого места нет, то можно правой кнопкой кликнуть на корневой папке, которая носит название уровня, и выбрать тот же пункт.

85.
  Что бы создать папку в папке, кликаем правой мышкой на родительскую папку и выбираем "Create Sub Folder".

86.
  Что бы поместить объекты в папку, просто перетаскиваем их в неё, либо в контекстном меню выбираем "Move To".

87.
  Переименовать папку, так же как и объект, можно с помощью левого клика или кнопки F2.

88.
  Кстати, когда вы удаляете папку, с помощью кнопки Delete или через контекстное меню "Edit -> Delete", объекты, которые были в папке, не удаляются, а просто высыпаются из неё, в то место, где она была.

89.
  Папку можно сдуплицировать со всем содержимым, выбрав в контекстном меню папки пункт "Duplicate Hierarchy". 
  Этот пункт создаст копию папки, и всех находящихся в ней объектов, и сразу же выделит их все, что бы их сразу можно было куда ни будь отодвинуть.

90.
  Каждый раз, после загрузки уровня, все папки в аутлайнере загружаются в раскрытом виде, что при большом количестве объектов создаёт огроменный список, в котором сложно ориентироваться. 

91.
  Клик на вот эти стрелочки, которые открывают/закрывают папки с зажатым шифтом, откроет, или, соответственно, закроет, все вложенные папки, по этому что бы уменьшить этот список, можно кликнуть с шифтом на стрелочку у корневой папки - это закроет сразу и её саму и все папки в ней. А потом, кликнуть на эту же стрелочку ещё раз, уже без шифта - это откроет папку, но уже только её одну, без внутренних под-папок.

92.
  Ну, или можно выбрать в этом меню "Collapse All" - это точно так же закроет все папки в иерархии, после чего останется только открыть корневую.




ИНТЕРФЕЙС -> Details
--------------------

93.
  Окно "Details" отображает свойства выделенного объекта. Она частично состоит из секций, которые есть всегда, но по большей части, из секций, которые меняются в зависимости от типа выделенного объекта. 

94.
  Например 3д объекту можно назначить материал, у светильника можно регулировать интенсивность, у камеры можно регулировать Field of View - всё это настраивается здесь, и конечно, это будут уникальные настройки, которые доступны только при выделенном, соответственно 3д объекте, светильнике и камере.

95.
  Но, у них у всех есть положение в пространстве - т.е. их можно двигать и вращать. Соответственно у них у всех будет секция "Transform".

96.
  В этой секции хранятся координаты объекта, угол поворота, и масштаб.

97.
  Все цифры тут - в глобальных координатах. Не дайте себя запутать вот этой менюшкой, она вот вообще про другое. Переместить объект в локальных координатах тут нельзя.

98.
  Позиция, по умолчанию - в сантиметрах, поворот - в градусах и масштаб - в коэффиценте (т.е. 1 = 100%, 2 = 200%, 0.5 = 50%).

99.
  Как вы уже догадались, сюда можно вводить цифры в ручную. Иногда... довольно часто... Очень часто, бывает, что нужно что б объект был прям точно спозиционирован, и это лёгкий способ это сделать.

100.
  Вообще, бывает две ситуации когда вы вводите цифры в ручную: когда надо, и когда не очень надо но хочется. %TODO: тут будет видео вставка%

101.
  Все числовые поля, в панели свойств, можно крутить мышкой.
  Когда вы видите вот такой курсор, зажмите левую кнопку и двигайте мышь влево/вправо - число будет менятся.

102.
  Ещё одна интересная особенность числвых полей - встроенный калькулятор.

103.
  Допустим, вы хотите переместить объект ровно на 18 сантиметров вверх. Просто допишите в поле, к уже написанному там числу "+18" и нажмите ввод. Так же работает минус, умножить, разделить, и возвести в степень, вот такой штукой, но последнее жто уже так, просто что б было.

104.
  У всех свойств, любого типа, которые не соответствуют значениям по умолчанию, справа, появляется вот такая стрелочка - это кнопка сброса. Нажав на неё, можно сбросить свойство в его дефолтное значение.




ADD BASIC SHAPES AND LIGHTS
---------------------------

105.
  Ну и последнее, о чём я хотел тут рассказать - как добавлять объекты в сцену.

106.
  Мы пока не говорим, о 3д моделях, которые вы нашли в интернете, а об объектах встроенных в движок. Все они находятся в этом меню.

107.
  В категории "Shapes", лежат примитивы - простые геометрические формы: куб, сфера, цилиндр, конус, и плоскость. Можно, например, добавить в уровень пару сфер... Или по больше.

108.
  Все примитивы в анриле, так же как и большая часть объектов окружения, которые вы импортируйте из вне - это "Static Mesh".

109.
  "Static Mesh" - это тип ассета, который означает статическую, не анимированную, 3д модель.
  Но не дайте себя запутать - она очень даже может быть никакой не статической а очень даже анимированной. Кейфреймами, скриптом, или физикой. 

110.
  "Статическая", тут скорее означает что не может изменятся сама можель. Ну, то есть она может двигаться, крутится или скалироваться, но не может делать, допустим, вот так.

111.
  По умолчанию, коллизия (детекция столкновений) у статик мешей работает но физика отключена. То есть, вы не сможет пройти насквозь и шарики от неё будут отскакивать, но вот падать сама она не будет, и сдвинуть её вы тоже не сможете.

112.
  Что бы включить симуляцию физики, у статик меши, достаточно выделить её, и в её свойствах, в секции "Physics", включить галочку "Simulate Physics". Теперь она будет падать, и её можно будет пинать.

113.
  По умолчанию, всем примитивам, назначается вот такой вот белый материал.

114.
  Если мы выделим сферу, и раскроем секцию "Materials", в панели свойств объекта, то мы увидим свойство, которое называется "Element 0", и которому, в качестве значения, присвоен некий "BasicShapeMaterial".

115.
  "Element 0" оно называется потому, что у одной 3д модели часто бывает несколько материалов, для разных её частей, тогда тут будет несколько элементов: 0, 1, 2, 3 и т.д. Но это нам сейчас не так интересно, гораздо интереснее значение свойства - это ассет. В данном случае, это материал, но свойства, значениями которых является какой-то ассет, из content browser-а, встречаются довольно часто. Вообще, сама меш это ассет, видите.

116.
  У таких свойств, всегда есть несколько общих элементов: превью ассета, раскрывающийся список, и две вот эти кнопки. (На эту кнопку не смотрите пока, она не общая, а специфична только для ассетов-материалов, и показывает список текстур, в материале.)
  Назначать ассеты объектам приходится очень часто, по этому довольно важно уметь всем этим добров пользоваться.

117.
  Превью ассета - это просто превью ассета. Маленькая картинка с его визуальной репрезентацией.
  Иногда это превью соответствует реальности, как сейчас, но чаще не очень, потому, что какой ни будь хитрый материал, типа облаков, не особо можно показать на такой првьюшке. И я вообще молчу о таких ассетах как физический материал, например, который представляет из себя просто набор параметров, и который в принципе не имеет визуальной составляющей.

118.
  Вот это поле со списком, в свёрнутом виде отображает текущий ассет, назначенный в качестве значения, а в развёрнутом, показывает список всех ассетов в вашем проекте, которые подходят а это свойство по типу. 
  Ну, то есть здесь вам покажут все материалы и material instance-ы. А тут - все меши.

119.
  В списке есть поиск по именам ассетов - не недооценивайте его. Когда в проекте куча ассетов (а их куча даже в относительно небольшом проекте), без поиска в этом списке найти нужное - это прям боль.

120.
  Ещё, назначить ассет свойству можно простым перетаскиванием, причём, если, когда вы начали тянуть ассет из Content Browser-а свойство не подсвятилось - значит вы тащите ассет не того типа, и сюда не подойдёт.

121.
  И, две, ультра-полезные кнопки. Первая - позволяет назначить свойству ассет, который в данный момент выделенн в Content Browser-е.
  То есть процесс выглядит так: кликаем на ассет, он выделился, и теперь на эту кнопку - вссет назначился.

122.
  Что же в этом такого полезного, если можно просто перетянуть?
  Проблема в том, что не всегда, когда вам надо будет назначить какой-то ассет, у вас на экране будет Content Browser, у анрила куча редакторов всего и вся, и большинство из них вы точно захотите развернуть на весь экран, потому что там и так места мало, а тратить это место ещё на то что б Content Browser всё время на экране висел - совсем расточительство.

123.
  И последняя кнопка - находит в Content Browser-е назначенный ассет, и выделяет его. 
  То есть вот объект. На нём какой-то материал. Вы хотите его найти, у себя в ассетах, что бы отредактировать, скопировать, или чего ещё. Ну, можно в тултип, конечно, посмотреть, а можно ткнуть эту кнопку, и, вот он.

124.
  Ну, и последнее, что хочу скзать - для кого-то, это наверное очевидно, но для кого-то может быть и нет - когда у вас на несколько объектов назначен один ассет - например, на все голубые кубы тут назначен вот этот голубой материал - то если изменить сам ассет, то он изменится на всех объектах, на которые он был назначен.
  То есть, если мы откроем этот материал, и поменяем ему цвет - то все кубы, которые были голубыми, станут розовыми.

125.
  Если мы не хотим этого эффекта, а хотим просто такой же материал но розовый, для других объектов, мы можем сдублировать материал - выделить его, нажать ctrl + D, и дать новой копии новое имя. А затем, открыть его, поменять цвет, созронить, и назначить на всё то, что мы хотим что б было розовым. 
  Можно массово, выделив сразу несколько объектов.

126.
   Пока на этом всё.



TODO:
- Viewport Shortcuts works only if viewport is active
- Details with multiple selection

? Camera Bookmarks
? Import
? Assign materials

DONE:
- Content Browser Color Codes
- Select multiple objects (viewport and outliner)
- Delete objects
- Ctrl + Z
- Details - reset field
- Create primitives



Reference
------------------------------------------------------------------------------------------------
Desktop VS Mobile
https://docs.unrealengine.com/5.0/en-US/rendering-features-for-mobile-games-in-unreal-engine/

I have created a Word document containing a lot of information regarding the differences in availability of rendering features between UE4’s PC and Mobile renderer. Some of the most debilitating limitations are:
    No more than 3 textures per landscape component
    No Ambient Occlusion (other than what’s set in material)
    No Stationary Skylight
    No DBuffer decals
    No Auto Exposure (only exposure bias is supported)
    No Capsule, Contact, or Distance Field shadows
    No support for cloth (either simulations or shading)
    No support for any shading model besides Default Lit and Unlit
    No World Position Offset
    No GPU Particles

------------------------------------------------------------------------------------------------






Simple UE Games
Shopping List 		- https://youtu.be/Sz3GYfoEdDY
Baby in Yellow		- https://youtu.be/IS3bROPhGhg
Alternate Watch		- https://youtu.be/36oQuuhx96g
Broken Through		- https://youtu.be/kjyl_T17DRY
House in the Woods	- https://youtu.be/5Mn6r6h_UsI
Apartment Next Door	- https://youtu.be/08ut5TJiEwg


Fat Dino
Flappy Bird, но RTX 	- https://www.youtube.com/watch?v=_fiQsWFwvD0&t=518s
Plants VS Zombies	- https://youtu.be/1EHNDoBj8u8?t=505
Game about Shrek	- https://youtu.be/Fpfvmbeua0w?t=977
Subway Surfers but RTX	- https://youtu.be/KS6XuyAJeFY?t=411

https://youtu.be/8KkMpG41zQs?t=618



